#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Quan_ly_may_bay
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLCB")]
	public partial class databaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAccount(Account instance);
    partial void UpdateAccount(Account instance);
    partial void DeleteAccount(Account instance);
    partial void InsertVe(Ve instance);
    partial void UpdateVe(Ve instance);
    partial void DeleteVe(Ve instance);
    partial void InsertChucVu(ChucVu instance);
    partial void UpdateChucVu(ChucVu instance);
    partial void DeleteChucVu(ChucVu instance);
    partial void InsertChuyenBay(ChuyenBay instance);
    partial void UpdateChuyenBay(ChuyenBay instance);
    partial void DeleteChuyenBay(ChuyenBay instance);
    partial void InsertKhachHang(KhachHang instance);
    partial void UpdateKhachHang(KhachHang instance);
    partial void DeleteKhachHang(KhachHang instance);
    partial void InsertLoTrinh(LoTrinh instance);
    partial void UpdateLoTrinh(LoTrinh instance);
    partial void DeleteLoTrinh(LoTrinh instance);
    partial void InsertMayBay(MayBay instance);
    partial void UpdateMayBay(MayBay instance);
    partial void DeleteMayBay(MayBay instance);
    partial void InsertNhanVien(NhanVien instance);
    partial void UpdateNhanVien(NhanVien instance);
    partial void DeleteNhanVien(NhanVien instance);
    partial void InsertPhanQuyen(PhanQuyen instance);
    partial void UpdatePhanQuyen(PhanQuyen instance);
    partial void DeletePhanQuyen(PhanQuyen instance);
    partial void InsertSanBay(SanBay instance);
    partial void UpdateSanBay(SanBay instance);
    partial void DeleteSanBay(SanBay instance);
    #endregion
		
		public databaseDataContext() : 
				base(global::Quan_ly_may_bay.Properties.Settings.Default.QLCBConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public databaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public databaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public databaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public databaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Account> Accounts
		{
			get
			{
				return this.GetTable<Account>();
			}
		}
		
		public System.Data.Linq.Table<Ve> Ves
		{
			get
			{
				return this.GetTable<Ve>();
			}
		}
		
		public System.Data.Linq.Table<ChucVu> ChucVus
		{
			get
			{
				return this.GetTable<ChucVu>();
			}
		}
		
		public System.Data.Linq.Table<ChuyenBay> ChuyenBays
		{
			get
			{
				return this.GetTable<ChuyenBay>();
			}
		}
		
		public System.Data.Linq.Table<KhachHang> KhachHangs
		{
			get
			{
				return this.GetTable<KhachHang>();
			}
		}
		
		public System.Data.Linq.Table<LoTrinh> LoTrinhs
		{
			get
			{
				return this.GetTable<LoTrinh>();
			}
		}
		
		public System.Data.Linq.Table<MayBay> MayBays
		{
			get
			{
				return this.GetTable<MayBay>();
			}
		}
		
		public System.Data.Linq.Table<NhanVien> NhanViens
		{
			get
			{
				return this.GetTable<NhanVien>();
			}
		}
		
		public System.Data.Linq.Table<PhanQuyen> PhanQuyens
		{
			get
			{
				return this.GetTable<PhanQuyen>();
			}
		}
		
		public System.Data.Linq.Table<SanBay> SanBays
		{
			get
			{
				return this.GetTable<SanBay>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Account")]
	public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Username;
		
		private System.Data.Linq.Binary _Password;
		
		private string _Email;
		
		private System.Nullable<int> _RandomKey;
		
		private System.Nullable<int> _OTP;
		
		private System.Nullable<System.DateTime> _OTPDateSend;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<int> _Active;
		
		private System.Nullable<System.DateTime> _DateActive;
		
		private System.Nullable<int> _LevelID;
		
		private EntityRef<KhachHang> _KhachHang;
		
		private EntitySet<NhanVien> _NhanViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(System.Data.Linq.Binary value);
    partial void OnPasswordChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnRandomKeyChanging(System.Nullable<int> value);
    partial void OnRandomKeyChanged();
    partial void OnOTPChanging(System.Nullable<int> value);
    partial void OnOTPChanged();
    partial void OnOTPDateSendChanging(System.Nullable<System.DateTime> value);
    partial void OnOTPDateSendChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnActiveChanging(System.Nullable<int> value);
    partial void OnActiveChanged();
    partial void OnDateActiveChanging(System.Nullable<System.DateTime> value);
    partial void OnDateActiveChanged();
    partial void OnLevelIDChanging(System.Nullable<int> value);
    partial void OnLevelIDChanged();
    #endregion
		
		public Account()
		{
			this._KhachHang = default(EntityRef<KhachHang>);
			this._NhanViens = new EntitySet<NhanVien>(new Action<NhanVien>(this.attach_NhanViens), new Action<NhanVien>(this.detach_NhanViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(20)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RandomKey", DbType="Int")]
		public System.Nullable<int> RandomKey
		{
			get
			{
				return this._RandomKey;
			}
			set
			{
				if ((this._RandomKey != value))
				{
					this.OnRandomKeyChanging(value);
					this.SendPropertyChanging();
					this._RandomKey = value;
					this.SendPropertyChanged("RandomKey");
					this.OnRandomKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OTP", DbType="Int")]
		public System.Nullable<int> OTP
		{
			get
			{
				return this._OTP;
			}
			set
			{
				if ((this._OTP != value))
				{
					this.OnOTPChanging(value);
					this.SendPropertyChanging();
					this._OTP = value;
					this.SendPropertyChanged("OTP");
					this.OnOTPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OTPDateSend", DbType="DateTime")]
		public System.Nullable<System.DateTime> OTPDateSend
		{
			get
			{
				return this._OTPDateSend;
			}
			set
			{
				if ((this._OTPDateSend != value))
				{
					this.OnOTPDateSendChanging(value);
					this.SendPropertyChanging();
					this._OTPDateSend = value;
					this.SendPropertyChanged("OTPDateSend");
					this.OnOTPDateSendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Int")]
		public System.Nullable<int> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateActive", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateActive
		{
			get
			{
				return this._DateActive;
			}
			set
			{
				if ((this._DateActive != value))
				{
					this.OnDateActiveChanging(value);
					this.SendPropertyChanging();
					this._DateActive = value;
					this.SendPropertyChanged("DateActive");
					this.OnDateActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelID", DbType="Int")]
		public System.Nullable<int> LevelID
		{
			get
			{
				return this._LevelID;
			}
			set
			{
				if ((this._LevelID != value))
				{
					this.OnLevelIDChanging(value);
					this.SendPropertyChanging();
					this._LevelID = value;
					this.SendPropertyChanged("LevelID");
					this.OnLevelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_KhachHang", Storage="_KhachHang", ThisKey="ID", OtherKey="MaKH", IsUnique=true, IsForeignKey=false)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.Account = null;
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.Account = this;
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_NhanVien", Storage="_NhanViens", ThisKey="ID", OtherKey="ID")]
		public EntitySet<NhanVien> NhanViens
		{
			get
			{
				return this._NhanViens;
			}
			set
			{
				this._NhanViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ve")]
	public partial class Ve : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaVe;
		
		private System.Nullable<int> _MaKH;
		
		private string _MaCB;
		
		private System.Nullable<int> _LevelSeat;
		
		private string _Seat;
		
		private EntityRef<ChuyenBay> _ChuyenBay;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaVeChanging(string value);
    partial void OnMaVeChanged();
    partial void OnMaKHChanging(System.Nullable<int> value);
    partial void OnMaKHChanged();
    partial void OnMaCBChanging(string value);
    partial void OnMaCBChanged();
    partial void OnLevelSeatChanging(System.Nullable<int> value);
    partial void OnLevelSeatChanged();
    partial void OnSeatChanging(string value);
    partial void OnSeatChanged();
    #endregion
		
		public Ve()
		{
			this._ChuyenBay = default(EntityRef<ChuyenBay>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaVe", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaVe
		{
			get
			{
				return this._MaVe;
			}
			set
			{
				if ((this._MaVe != value))
				{
					this.OnMaVeChanging(value);
					this.SendPropertyChanging();
					this._MaVe = value;
					this.SendPropertyChanged("MaVe");
					this.OnMaVeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="Int")]
		public System.Nullable<int> MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCB", DbType="Char(7)")]
		public string MaCB
		{
			get
			{
				return this._MaCB;
			}
			set
			{
				if ((this._MaCB != value))
				{
					if (this._ChuyenBay.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaCBChanging(value);
					this.SendPropertyChanging();
					this._MaCB = value;
					this.SendPropertyChanged("MaCB");
					this.OnMaCBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelSeat", DbType="Int")]
		public System.Nullable<int> LevelSeat
		{
			get
			{
				return this._LevelSeat;
			}
			set
			{
				if ((this._LevelSeat != value))
				{
					this.OnLevelSeatChanging(value);
					this.SendPropertyChanging();
					this._LevelSeat = value;
					this.SendPropertyChanged("LevelSeat");
					this.OnLevelSeatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Seat", DbType="Char(3)")]
		public string Seat
		{
			get
			{
				return this._Seat;
			}
			set
			{
				if ((this._Seat != value))
				{
					this.OnSeatChanging(value);
					this.SendPropertyChanging();
					this._Seat = value;
					this.SendPropertyChanged("Seat");
					this.OnSeatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChuyenBay_Ve", Storage="_ChuyenBay", ThisKey="MaCB", OtherKey="MaCB", IsForeignKey=true)]
		public ChuyenBay ChuyenBay
		{
			get
			{
				return this._ChuyenBay.Entity;
			}
			set
			{
				ChuyenBay previousValue = this._ChuyenBay.Entity;
				if (((previousValue != value) 
							|| (this._ChuyenBay.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChuyenBay.Entity = null;
						previousValue.Ves.Remove(this);
					}
					this._ChuyenBay.Entity = value;
					if ((value != null))
					{
						value.Ves.Add(this);
						this._MaCB = value.MaCB;
					}
					else
					{
						this._MaCB = default(string);
					}
					this.SendPropertyChanged("ChuyenBay");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChucVu")]
	public partial class ChucVu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaCV;
		
		private string _TenCV;
		
		private string _MoTa;
		
		private EntitySet<NhanVien> _NhanViens;
		
		private EntityRef<PhanQuyen> _PhanQuyen;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCVChanging(string value);
    partial void OnMaCVChanged();
    partial void OnTenCVChanging(string value);
    partial void OnTenCVChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    #endregion
		
		public ChucVu()
		{
			this._NhanViens = new EntitySet<NhanVien>(new Action<NhanVien>(this.attach_NhanViens), new Action<NhanVien>(this.detach_NhanViens));
			this._PhanQuyen = default(EntityRef<PhanQuyen>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCV", DbType="Char(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaCV
		{
			get
			{
				return this._MaCV;
			}
			set
			{
				if ((this._MaCV != value))
				{
					this.OnMaCVChanging(value);
					this.SendPropertyChanging();
					this._MaCV = value;
					this.SendPropertyChanged("MaCV");
					this.OnMaCVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenCV", DbType="NVarChar(20)")]
		public string TenCV
		{
			get
			{
				return this._TenCV;
			}
			set
			{
				if ((this._TenCV != value))
				{
					this.OnTenCVChanging(value);
					this.SendPropertyChanging();
					this._TenCV = value;
					this.SendPropertyChanged("TenCV");
					this.OnTenCVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(100)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChucVu_NhanVien", Storage="_NhanViens", ThisKey="MaCV", OtherKey="MaCV")]
		public EntitySet<NhanVien> NhanViens
		{
			get
			{
				return this._NhanViens;
			}
			set
			{
				this._NhanViens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChucVu_PhanQuyen", Storage="_PhanQuyen", ThisKey="MaCV", OtherKey="PQ", IsUnique=true, IsForeignKey=false)]
		public PhanQuyen PhanQuyen
		{
			get
			{
				return this._PhanQuyen.Entity;
			}
			set
			{
				PhanQuyen previousValue = this._PhanQuyen.Entity;
				if (((previousValue != value) 
							|| (this._PhanQuyen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhanQuyen.Entity = null;
						previousValue.ChucVu = null;
					}
					this._PhanQuyen.Entity = value;
					if ((value != null))
					{
						value.ChucVu = this;
					}
					this.SendPropertyChanged("PhanQuyen");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.ChucVu = this;
		}
		
		private void detach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.ChucVu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChuyenBay")]
	public partial class ChuyenBay : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaCB;
		
		private string _MaLT;
		
		private System.Nullable<System.DateTime> _NgayKH;
		
		private System.Nullable<int> _SoGhe;
		
		private EntitySet<Ve> _Ves;
		
		private EntityRef<LoTrinh> _LoTrinh;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCBChanging(string value);
    partial void OnMaCBChanged();
    partial void OnMaLTChanging(string value);
    partial void OnMaLTChanged();
    partial void OnNgayKHChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayKHChanged();
    partial void OnSoGheChanging(System.Nullable<int> value);
    partial void OnSoGheChanged();
    #endregion
		
		public ChuyenBay()
		{
			this._Ves = new EntitySet<Ve>(new Action<Ve>(this.attach_Ves), new Action<Ve>(this.detach_Ves));
			this._LoTrinh = default(EntityRef<LoTrinh>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCB", DbType="Char(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaCB
		{
			get
			{
				return this._MaCB;
			}
			set
			{
				if ((this._MaCB != value))
				{
					this.OnMaCBChanging(value);
					this.SendPropertyChanging();
					this._MaCB = value;
					this.SendPropertyChanged("MaCB");
					this.OnMaCBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLT", DbType="Char(4)")]
		public string MaLT
		{
			get
			{
				return this._MaLT;
			}
			set
			{
				if ((this._MaLT != value))
				{
					if (this._LoTrinh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLTChanging(value);
					this.SendPropertyChanging();
					this._MaLT = value;
					this.SendPropertyChanged("MaLT");
					this.OnMaLTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayKH", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayKH
		{
			get
			{
				return this._NgayKH;
			}
			set
			{
				if ((this._NgayKH != value))
				{
					this.OnNgayKHChanging(value);
					this.SendPropertyChanging();
					this._NgayKH = value;
					this.SendPropertyChanged("NgayKH");
					this.OnNgayKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoGhe", DbType="Int")]
		public System.Nullable<int> SoGhe
		{
			get
			{
				return this._SoGhe;
			}
			set
			{
				if ((this._SoGhe != value))
				{
					this.OnSoGheChanging(value);
					this.SendPropertyChanging();
					this._SoGhe = value;
					this.SendPropertyChanged("SoGhe");
					this.OnSoGheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChuyenBay_Ve", Storage="_Ves", ThisKey="MaCB", OtherKey="MaCB")]
		public EntitySet<Ve> Ves
		{
			get
			{
				return this._Ves;
			}
			set
			{
				this._Ves.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoTrinh_ChuyenBay", Storage="_LoTrinh", ThisKey="MaLT", OtherKey="MaLT", IsForeignKey=true)]
		public LoTrinh LoTrinh
		{
			get
			{
				return this._LoTrinh.Entity;
			}
			set
			{
				LoTrinh previousValue = this._LoTrinh.Entity;
				if (((previousValue != value) 
							|| (this._LoTrinh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoTrinh.Entity = null;
						previousValue.ChuyenBays.Remove(this);
					}
					this._LoTrinh.Entity = value;
					if ((value != null))
					{
						value.ChuyenBays.Add(this);
						this._MaLT = value.MaLT;
					}
					else
					{
						this._MaLT = default(string);
					}
					this.SendPropertyChanged("LoTrinh");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ves(Ve entity)
		{
			this.SendPropertyChanging();
			entity.ChuyenBay = this;
		}
		
		private void detach_Ves(Ve entity)
		{
			this.SendPropertyChanging();
			entity.ChuyenBay = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachHang")]
	public partial class KhachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaKH;
		
		private string _HoTenKH;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private string _DiaChi;
		
		private string _GioiTinh;
		
		private string _SDT;
		
		private string _CCCD;
		
		private EntityRef<Account> _Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKHChanging(int value);
    partial void OnMaKHChanged();
    partial void OnHoTenKHChanging(string value);
    partial void OnHoTenKHChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnCCCDChanging(string value);
    partial void OnCCCDChanged();
    #endregion
		
		public KhachHang()
		{
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTenKH", DbType="NVarChar(30)")]
		public string HoTenKH
		{
			get
			{
				return this._HoTenKH;
			}
			set
			{
				if ((this._HoTenKH != value))
				{
					this.OnHoTenKHChanging(value);
					this.SendPropertyChanging();
					this._HoTenKH = value;
					this.SendPropertyChanged("HoTenKH");
					this.OnHoTenKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(100)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(3)")]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Char(10)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCCD", DbType="Char(12)")]
		public string CCCD
		{
			get
			{
				return this._CCCD;
			}
			set
			{
				if ((this._CCCD != value))
				{
					this.OnCCCDChanging(value);
					this.SendPropertyChanging();
					this._CCCD = value;
					this.SendPropertyChanged("CCCD");
					this.OnCCCDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_KhachHang", Storage="_Account", ThisKey="MaKH", OtherKey="ID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.KhachHang = null;
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.KhachHang = this;
						this._MaKH = value.ID;
					}
					else
					{
						this._MaKH = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoTrinh")]
	public partial class LoTrinh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLT;
		
		private string _MaMB;
		
		private string _NoiXuatPhat;
		
		private string _NoiDen;
		
		private System.Nullable<System.TimeSpan> _GioCatCanh;
		
		private System.Nullable<System.TimeSpan> _GioHaCanh;
		
		private System.Nullable<int> _Gia;
		
		private EntitySet<ChuyenBay> _ChuyenBays;
		
		private EntityRef<MayBay> _MayBay;
		
		private EntityRef<SanBay> _SanBay;
		
		private EntityRef<SanBay> _SanBay1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLTChanging(string value);
    partial void OnMaLTChanged();
    partial void OnMaMBChanging(string value);
    partial void OnMaMBChanged();
    partial void OnNoiXuatPhatChanging(string value);
    partial void OnNoiXuatPhatChanged();
    partial void OnNoiDenChanging(string value);
    partial void OnNoiDenChanged();
    partial void OnGioCatCanhChanging(System.Nullable<System.TimeSpan> value);
    partial void OnGioCatCanhChanged();
    partial void OnGioHaCanhChanging(System.Nullable<System.TimeSpan> value);
    partial void OnGioHaCanhChanged();
    partial void OnGiaChanging(System.Nullable<int> value);
    partial void OnGiaChanged();
    #endregion
		
		public LoTrinh()
		{
			this._ChuyenBays = new EntitySet<ChuyenBay>(new Action<ChuyenBay>(this.attach_ChuyenBays), new Action<ChuyenBay>(this.detach_ChuyenBays));
			this._MayBay = default(EntityRef<MayBay>);
			this._SanBay = default(EntityRef<SanBay>);
			this._SanBay1 = default(EntityRef<SanBay>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLT", DbType="Char(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLT
		{
			get
			{
				return this._MaLT;
			}
			set
			{
				if ((this._MaLT != value))
				{
					this.OnMaLTChanging(value);
					this.SendPropertyChanging();
					this._MaLT = value;
					this.SendPropertyChanged("MaLT");
					this.OnMaLTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMB", DbType="Char(4)")]
		public string MaMB
		{
			get
			{
				return this._MaMB;
			}
			set
			{
				if ((this._MaMB != value))
				{
					if (this._MayBay.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMBChanging(value);
					this.SendPropertyChanging();
					this._MaMB = value;
					this.SendPropertyChanged("MaMB");
					this.OnMaMBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiXuatPhat", DbType="Char(3)")]
		public string NoiXuatPhat
		{
			get
			{
				return this._NoiXuatPhat;
			}
			set
			{
				if ((this._NoiXuatPhat != value))
				{
					if (this._SanBay.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNoiXuatPhatChanging(value);
					this.SendPropertyChanging();
					this._NoiXuatPhat = value;
					this.SendPropertyChanged("NoiXuatPhat");
					this.OnNoiXuatPhatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDen", DbType="Char(3)")]
		public string NoiDen
		{
			get
			{
				return this._NoiDen;
			}
			set
			{
				if ((this._NoiDen != value))
				{
					if (this._SanBay1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNoiDenChanging(value);
					this.SendPropertyChanging();
					this._NoiDen = value;
					this.SendPropertyChanged("NoiDen");
					this.OnNoiDenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioCatCanh", DbType="Time")]
		public System.Nullable<System.TimeSpan> GioCatCanh
		{
			get
			{
				return this._GioCatCanh;
			}
			set
			{
				if ((this._GioCatCanh != value))
				{
					this.OnGioCatCanhChanging(value);
					this.SendPropertyChanging();
					this._GioCatCanh = value;
					this.SendPropertyChanged("GioCatCanh");
					this.OnGioCatCanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioHaCanh", DbType="Time")]
		public System.Nullable<System.TimeSpan> GioHaCanh
		{
			get
			{
				return this._GioHaCanh;
			}
			set
			{
				if ((this._GioHaCanh != value))
				{
					this.OnGioHaCanhChanging(value);
					this.SendPropertyChanging();
					this._GioHaCanh = value;
					this.SendPropertyChanged("GioHaCanh");
					this.OnGioHaCanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Int")]
		public System.Nullable<int> Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoTrinh_ChuyenBay", Storage="_ChuyenBays", ThisKey="MaLT", OtherKey="MaLT")]
		public EntitySet<ChuyenBay> ChuyenBays
		{
			get
			{
				return this._ChuyenBays;
			}
			set
			{
				this._ChuyenBays.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MayBay_LoTrinh", Storage="_MayBay", ThisKey="MaMB", OtherKey="MaMB", IsForeignKey=true)]
		public MayBay MayBay
		{
			get
			{
				return this._MayBay.Entity;
			}
			set
			{
				MayBay previousValue = this._MayBay.Entity;
				if (((previousValue != value) 
							|| (this._MayBay.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MayBay.Entity = null;
						previousValue.LoTrinhs.Remove(this);
					}
					this._MayBay.Entity = value;
					if ((value != null))
					{
						value.LoTrinhs.Add(this);
						this._MaMB = value.MaMB;
					}
					else
					{
						this._MaMB = default(string);
					}
					this.SendPropertyChanged("MayBay");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanBay_LoTrinh", Storage="_SanBay", ThisKey="NoiXuatPhat", OtherKey="MaSB", IsForeignKey=true)]
		public SanBay SanBay
		{
			get
			{
				return this._SanBay.Entity;
			}
			set
			{
				SanBay previousValue = this._SanBay.Entity;
				if (((previousValue != value) 
							|| (this._SanBay.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanBay.Entity = null;
						previousValue.LoTrinhs.Remove(this);
					}
					this._SanBay.Entity = value;
					if ((value != null))
					{
						value.LoTrinhs.Add(this);
						this._NoiXuatPhat = value.MaSB;
					}
					else
					{
						this._NoiXuatPhat = default(string);
					}
					this.SendPropertyChanged("SanBay");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanBay_LoTrinh1", Storage="_SanBay1", ThisKey="NoiDen", OtherKey="MaSB", IsForeignKey=true)]
		public SanBay SanBay1
		{
			get
			{
				return this._SanBay1.Entity;
			}
			set
			{
				SanBay previousValue = this._SanBay1.Entity;
				if (((previousValue != value) 
							|| (this._SanBay1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanBay1.Entity = null;
						previousValue.LoTrinhs1.Remove(this);
					}
					this._SanBay1.Entity = value;
					if ((value != null))
					{
						value.LoTrinhs1.Add(this);
						this._NoiDen = value.MaSB;
					}
					else
					{
						this._NoiDen = default(string);
					}
					this.SendPropertyChanged("SanBay1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChuyenBays(ChuyenBay entity)
		{
			this.SendPropertyChanging();
			entity.LoTrinh = this;
		}
		
		private void detach_ChuyenBays(ChuyenBay entity)
		{
			this.SendPropertyChanging();
			entity.LoTrinh = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MayBay")]
	public partial class MayBay : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaMB;
		
		private string _TypeMB;
		
		private System.Nullable<System.DateTime> _DateNhapVe;
		
		private string _HangSanXuat;
		
		private EntitySet<LoTrinh> _LoTrinhs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaMBChanging(string value);
    partial void OnMaMBChanged();
    partial void OnTypeMBChanging(string value);
    partial void OnTypeMBChanged();
    partial void OnDateNhapVeChanging(System.Nullable<System.DateTime> value);
    partial void OnDateNhapVeChanged();
    partial void OnHangSanXuatChanging(string value);
    partial void OnHangSanXuatChanged();
    #endregion
		
		public MayBay()
		{
			this._LoTrinhs = new EntitySet<LoTrinh>(new Action<LoTrinh>(this.attach_LoTrinhs), new Action<LoTrinh>(this.detach_LoTrinhs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMB", DbType="Char(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaMB
		{
			get
			{
				return this._MaMB;
			}
			set
			{
				if ((this._MaMB != value))
				{
					this.OnMaMBChanging(value);
					this.SendPropertyChanging();
					this._MaMB = value;
					this.SendPropertyChanged("MaMB");
					this.OnMaMBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeMB", DbType="NVarChar(20)")]
		public string TypeMB
		{
			get
			{
				return this._TypeMB;
			}
			set
			{
				if ((this._TypeMB != value))
				{
					this.OnTypeMBChanging(value);
					this.SendPropertyChanging();
					this._TypeMB = value;
					this.SendPropertyChanged("TypeMB");
					this.OnTypeMBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateNhapVe", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateNhapVe
		{
			get
			{
				return this._DateNhapVe;
			}
			set
			{
				if ((this._DateNhapVe != value))
				{
					this.OnDateNhapVeChanging(value);
					this.SendPropertyChanging();
					this._DateNhapVe = value;
					this.SendPropertyChanged("DateNhapVe");
					this.OnDateNhapVeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HangSanXuat", DbType="NVarChar(20)")]
		public string HangSanXuat
		{
			get
			{
				return this._HangSanXuat;
			}
			set
			{
				if ((this._HangSanXuat != value))
				{
					this.OnHangSanXuatChanging(value);
					this.SendPropertyChanging();
					this._HangSanXuat = value;
					this.SendPropertyChanged("HangSanXuat");
					this.OnHangSanXuatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MayBay_LoTrinh", Storage="_LoTrinhs", ThisKey="MaMB", OtherKey="MaMB")]
		public EntitySet<LoTrinh> LoTrinhs
		{
			get
			{
				return this._LoTrinhs;
			}
			set
			{
				this._LoTrinhs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LoTrinhs(LoTrinh entity)
		{
			this.SendPropertyChanging();
			entity.MayBay = this;
		}
		
		private void detach_LoTrinhs(LoTrinh entity)
		{
			this.SendPropertyChanging();
			entity.MayBay = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNV;
		
		private string _HoTenNV;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private string _DiaChi;
		
		private string _GioiTinh;
		
		private System.Nullable<System.DateTime> _NgayVaoLam;
		
		private string _MaCV;
		
		private string _SDT;
		
		private System.Nullable<int> _ID;
		
		private System.Nullable<int> _Luong;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<ChucVu> _ChucVu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNVChanging(int value);
    partial void OnMaNVChanged();
    partial void OnHoTenNVChanging(string value);
    partial void OnHoTenNVChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnNgayVaoLamChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayVaoLamChanged();
    partial void OnMaCVChanging(string value);
    partial void OnMaCVChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnIDChanging(System.Nullable<int> value);
    partial void OnIDChanged();
    partial void OnLuongChanging(System.Nullable<int> value);
    partial void OnLuongChanged();
    #endregion
		
		public NhanVien()
		{
			this._Account = default(EntityRef<Account>);
			this._ChucVu = default(EntityRef<ChucVu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTenNV", DbType="NVarChar(30)")]
		public string HoTenNV
		{
			get
			{
				return this._HoTenNV;
			}
			set
			{
				if ((this._HoTenNV != value))
				{
					this.OnHoTenNVChanging(value);
					this.SendPropertyChanging();
					this._HoTenNV = value;
					this.SendPropertyChanged("HoTenNV");
					this.OnHoTenNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(100)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(3)")]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayVaoLam", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayVaoLam
		{
			get
			{
				return this._NgayVaoLam;
			}
			set
			{
				if ((this._NgayVaoLam != value))
				{
					this.OnNgayVaoLamChanging(value);
					this.SendPropertyChanging();
					this._NgayVaoLam = value;
					this.SendPropertyChanged("NgayVaoLam");
					this.OnNgayVaoLamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCV", DbType="Char(4)")]
		public string MaCV
		{
			get
			{
				return this._MaCV;
			}
			set
			{
				if ((this._MaCV != value))
				{
					if (this._ChucVu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaCVChanging(value);
					this.SendPropertyChanging();
					this._MaCV = value;
					this.SendPropertyChanged("MaCV");
					this.OnMaCVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Char(10)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int")]
		public System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Luong", DbType="Int")]
		public System.Nullable<int> Luong
		{
			get
			{
				return this._Luong;
			}
			set
			{
				if ((this._Luong != value))
				{
					this.OnLuongChanging(value);
					this.SendPropertyChanging();
					this._Luong = value;
					this.SendPropertyChanged("Luong");
					this.OnLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_NhanVien", Storage="_Account", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.NhanViens.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.NhanViens.Add(this);
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChucVu_NhanVien", Storage="_ChucVu", ThisKey="MaCV", OtherKey="MaCV", IsForeignKey=true)]
		public ChucVu ChucVu
		{
			get
			{
				return this._ChucVu.Entity;
			}
			set
			{
				ChucVu previousValue = this._ChucVu.Entity;
				if (((previousValue != value) 
							|| (this._ChucVu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChucVu.Entity = null;
						previousValue.NhanViens.Remove(this);
					}
					this._ChucVu.Entity = value;
					if ((value != null))
					{
						value.NhanViens.Add(this);
						this._MaCV = value.MaCV;
					}
					else
					{
						this._MaCV = default(string);
					}
					this.SendPropertyChanged("ChucVu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhanQuyen")]
	public partial class PhanQuyen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PQ;
		
		private System.Nullable<int> _ViewTicket;
		
		private System.Nullable<int> _FlightItinerary;
		
		private System.Nullable<int> _CreateFlight;
		
		private System.Nullable<int> _ManageStaff;
		
		private EntityRef<ChucVu> _ChucVu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPQChanging(string value);
    partial void OnPQChanged();
    partial void OnViewTicketChanging(System.Nullable<int> value);
    partial void OnViewTicketChanged();
    partial void OnFlightItineraryChanging(System.Nullable<int> value);
    partial void OnFlightItineraryChanged();
    partial void OnCreateFlightChanging(System.Nullable<int> value);
    partial void OnCreateFlightChanged();
    partial void OnManageStaffChanging(System.Nullable<int> value);
    partial void OnManageStaffChanged();
    #endregion
		
		public PhanQuyen()
		{
			this._ChucVu = default(EntityRef<ChucVu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PQ", DbType="Char(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PQ
		{
			get
			{
				return this._PQ;
			}
			set
			{
				if ((this._PQ != value))
				{
					if (this._ChucVu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPQChanging(value);
					this.SendPropertyChanging();
					this._PQ = value;
					this.SendPropertyChanged("PQ");
					this.OnPQChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewTicket", DbType="Int")]
		public System.Nullable<int> ViewTicket
		{
			get
			{
				return this._ViewTicket;
			}
			set
			{
				if ((this._ViewTicket != value))
				{
					this.OnViewTicketChanging(value);
					this.SendPropertyChanging();
					this._ViewTicket = value;
					this.SendPropertyChanged("ViewTicket");
					this.OnViewTicketChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlightItinerary", DbType="Int")]
		public System.Nullable<int> FlightItinerary
		{
			get
			{
				return this._FlightItinerary;
			}
			set
			{
				if ((this._FlightItinerary != value))
				{
					this.OnFlightItineraryChanging(value);
					this.SendPropertyChanging();
					this._FlightItinerary = value;
					this.SendPropertyChanged("FlightItinerary");
					this.OnFlightItineraryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateFlight", DbType="Int")]
		public System.Nullable<int> CreateFlight
		{
			get
			{
				return this._CreateFlight;
			}
			set
			{
				if ((this._CreateFlight != value))
				{
					this.OnCreateFlightChanging(value);
					this.SendPropertyChanging();
					this._CreateFlight = value;
					this.SendPropertyChanged("CreateFlight");
					this.OnCreateFlightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageStaff", DbType="Int")]
		public System.Nullable<int> ManageStaff
		{
			get
			{
				return this._ManageStaff;
			}
			set
			{
				if ((this._ManageStaff != value))
				{
					this.OnManageStaffChanging(value);
					this.SendPropertyChanging();
					this._ManageStaff = value;
					this.SendPropertyChanged("ManageStaff");
					this.OnManageStaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChucVu_PhanQuyen", Storage="_ChucVu", ThisKey="PQ", OtherKey="MaCV", IsForeignKey=true)]
		public ChucVu ChucVu
		{
			get
			{
				return this._ChucVu.Entity;
			}
			set
			{
				ChucVu previousValue = this._ChucVu.Entity;
				if (((previousValue != value) 
							|| (this._ChucVu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChucVu.Entity = null;
						previousValue.PhanQuyen = null;
					}
					this._ChucVu.Entity = value;
					if ((value != null))
					{
						value.PhanQuyen = this;
						this._PQ = value.MaCV;
					}
					else
					{
						this._PQ = default(string);
					}
					this.SendPropertyChanged("ChucVu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SanBay")]
	public partial class SanBay : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaSB;
		
		private string _TenSB;
		
		private string _City;
		
		private EntitySet<LoTrinh> _LoTrinhs;
		
		private EntitySet<LoTrinh> _LoTrinhs1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSBChanging(string value);
    partial void OnMaSBChanged();
    partial void OnTenSBChanging(string value);
    partial void OnTenSBChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    #endregion
		
		public SanBay()
		{
			this._LoTrinhs = new EntitySet<LoTrinh>(new Action<LoTrinh>(this.attach_LoTrinhs), new Action<LoTrinh>(this.detach_LoTrinhs));
			this._LoTrinhs1 = new EntitySet<LoTrinh>(new Action<LoTrinh>(this.attach_LoTrinhs1), new Action<LoTrinh>(this.detach_LoTrinhs1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSB", DbType="Char(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSB
		{
			get
			{
				return this._MaSB;
			}
			set
			{
				if ((this._MaSB != value))
				{
					this.OnMaSBChanging(value);
					this.SendPropertyChanging();
					this._MaSB = value;
					this.SendPropertyChanged("MaSB");
					this.OnMaSBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSB", DbType="NVarChar(50)")]
		public string TenSB
		{
			get
			{
				return this._TenSB;
			}
			set
			{
				if ((this._TenSB != value))
				{
					this.OnTenSBChanging(value);
					this.SendPropertyChanging();
					this._TenSB = value;
					this.SendPropertyChanged("TenSB");
					this.OnTenSBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(20)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanBay_LoTrinh", Storage="_LoTrinhs", ThisKey="MaSB", OtherKey="NoiXuatPhat")]
		public EntitySet<LoTrinh> LoTrinhs
		{
			get
			{
				return this._LoTrinhs;
			}
			set
			{
				this._LoTrinhs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanBay_LoTrinh1", Storage="_LoTrinhs1", ThisKey="MaSB", OtherKey="NoiDen")]
		public EntitySet<LoTrinh> LoTrinhs1
		{
			get
			{
				return this._LoTrinhs1;
			}
			set
			{
				this._LoTrinhs1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LoTrinhs(LoTrinh entity)
		{
			this.SendPropertyChanging();
			entity.SanBay = this;
		}
		
		private void detach_LoTrinhs(LoTrinh entity)
		{
			this.SendPropertyChanging();
			entity.SanBay = null;
		}
		
		private void attach_LoTrinhs1(LoTrinh entity)
		{
			this.SendPropertyChanging();
			entity.SanBay1 = this;
		}
		
		private void detach_LoTrinhs1(LoTrinh entity)
		{
			this.SendPropertyChanging();
			entity.SanBay1 = null;
		}
	}
}
#pragma warning restore 1591
